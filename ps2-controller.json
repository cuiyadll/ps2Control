{"README.md":"PS2 Controller extension for MakeCode \n\n","main_PS.ts":"\n//% color=\"#31C7D5\" weight=10 icon=\"\\uf1d1\"\n namespace ps2controller {\n\n    let chipSelect = DigitalPin.P12\n    pins.digitalWritePin(chipSelect, 1)\n\n    pins.spiPins(DigitalPin.P15, DigitalPin.P14, DigitalPin.P13)\n    pins.spiFormat(8, 3)\n    pins.spiFrequency(250000)\n\n    let pad = pins.createBuffer(6)\n    let connected = false\n\n    const poll_cmd = hex\n        `014200000000000000`\n\n    function send_command(transmit: Buffer): Buffer {\n        // 处理位顺序\n        transmit = reverse.rbuffer(transmit)\n\n        let receive = pins.createBuffer(transmit.length);\n\n        pins.digitalWritePin(chipSelect, 0);\n        // 实际发送命令\n        for (let i = 0; i < transmit.length; i++) {\n            receive[i] = pins.spiWrite(transmit[i]);\n        }\n        pins.digitalWritePin(chipSelect, 1)\n\n        // 处理位顺序\n        receive = reverse.rbuffer(receive)\n\n        return receive\n     }\n\n    export enum PS2Button {\n        //% blockId=\"Left\" block=\"向左方向键\"\n        Left,\n        //% blockId=\"Down\" block=\"向下方向键\"\n        Down,\n        //% blockId=\"Right\" block=\"向右方向键\"\n        Right,\n        //% blockId=\"Up\" block=\"向上方向键\"\n        Up,\n        //% blockId=\"Start\" block=\"开始(Start)按键\"\n        Start,\n        //% blockId=\"Analog_Left\" block=\"右侧摇杆按下\"\n        Analog_Left,\n        //% blockId=\"Analog_Right\" block=\"左侧摇杆按下\"\n        Analog_Right,\n        //% blockId=\"Select\" block=\"选择(Select)按键\"\n        Select,\n        //% blockId=\"Square\" block=\"正方形(□)按键\"\n        Square,\n        //% blockId=\"Cross\" block=\"叉型(×)按键\"\n        Cross,\n        //% blockId=\"Circle\" block=\"圆型(○)按键\"\n        Circle,\n        //% blockId=\"Triangle\" block=\"三角形(△)按键\"\n        Triangle,\n        //% blockId=\"R1\" block=\"R1按键\"\n        R1,\n        //% blockId=\"L1\" block=\"L1按键\"\n        L1,\n        //% blockId=\"R2\" block=\"R2按键\"\n        R2,\n        //% blockId=\"L2\" block=\"L2按键\"\n        L2,\n        //% blockId=\"Buttons\" block=\"按键(空缺)\"\n        Buttons,\n        //% blockId=\"RX\" block=\"右侧摇杆X的值\"\n        RX,\n        //% blockId=\"RY\" block=\"右侧摇杆Y的值\"\n        RY,\n        //% blockId=\"LX\" block=\"左侧摇杆x的值\"\n        LX,\n        //% blockId=\"LY\" block=\"左侧摇杆Y的值\"\n        LY,\n     };\n\n    //% blockId=robotbit_button_pressed block=\"设置PS2手柄|%b|按下\"\n    //% weight=99\n    //% blockGap=50\n    //% name.fieldEditor=\"gridpicker\" name.fieldOptions.columns=4\n     export function button_pressed(b: PS2Button): number {\n        if(!connected) return 0x00\n\n        switch (b) {\n            case PS2Button.Left:\n                return pad[0] & 0x80 ? 0 : 1;\n            case PS2Button.Down:\n                return pad[0] & 0x40 ? 0 : 1;\n            case PS2Button.Right:\n                return pad[0] & 0x20 ? 0 : 1;\n            case PS2Button.Up:\n                return pad[0] & 0x10 ? 0 : 1;\n            case PS2Button.Start:\n                return pad[0] & 0x08 ? 0 : 1;\n            case PS2Button.Analog_Left:\n                return pad[0] & 0x04 ? 0 : 1;\n            case PS2Button.Analog_Right:\n                return pad[0] & 0x02 ? 0 : 1;\n            case PS2Button.Select:\n                return pad[0] & 0x01 ? 0 : 1;\n            case PS2Button.Square:\n                return pad[1] & 0x80 ? 0 : 1;\n            case PS2Button.Cross:\n                return pad[1] & 0x40 ? 0 : 1;\n            case PS2Button.Circle:\n                return pad[1] & 0x20 ? 0 : 1;\n            case PS2Button.Triangle:\n                return pad[1] & 0x10 ? 0 : 1;\n            case PS2Button.R1:\n                return pad[1] & 0x08 ? 0 : 1;\n            case PS2Button.L1:\n                return pad[1] & 0x04 ? 0 : 1;\n            case PS2Button.R2:\n                return pad[1] & 0x02 ? 0 : 1;\n            case PS2Button.L2:\n                return pad[1] & 0x01 ? 0 : 1;\n            case PS2Button.Buttons:\n                return ~((pad[1] << 8) | pad[0]) & 0xffff;\n            case PS2Button.RX:\n                return pad[2] - 0x80;\n            case PS2Button.RY:\n                return pad[3] - 0x80;\n            case PS2Button.LX:\n                return pad[4] - 0x80;\n            case PS2Button.LY:\n                return pad[5] - 0x80;\n        }\n        return 0;\n    }\n\n    function poll(): boolean {\n        let buf = send_command(poll_cmd)\n        if (buf[2] != 0x5a) {\n            return false;\n        }\n\n        for (let i = 0; i < 6; i++) {\n            pad[i] = buf[3 + i];\n        }\n\n        connected = true\n\n        return true\n    }\n\n    basic.forever(function () {\n        poll();\n    })\n }\n","pxt.json":"{\n    \"name\": \"ps2-controller\",\n    \"version\": \"0.1.0\",\n    \"description\": \"Extension to use a PS2 controller\",\n    \"license\": \"Apache\",\n    \"dependencies\": {\n        \"core\": \"*\",\n        \"reverse\": \"github:gbraad/pxt-reversebit#v0.1.0\"\n    },\n    \"files\": [\n        \"README.md\",\n        \"main_PS.ts\"\n    ],\n    \"testFiles\": [\n        \"test.ts\"\n    ],\n    \"public\": true,\n    \"targetVersions\": {\n        \"branch\": \"v5.0.12\",\n        \"tag\": \"v5.0.12\",\n        \"commits\": \"https://github.com/microsoft/pxt-microbit/commits/97491d6832cccab6b5bdc05b58e4c6b5dcc18cdd\",\n        \"target\": \"5.0.12\",\n        \"pxt\": \"8.0.7\"\n    },\n    \"supportedTargets\": [\n        \"microbit\"\n    ],\n    \"preferredEditor\": \"tsprj\"\n}\n","test.ts":"// tests go here; this will not be compiled when this package is used as an extension.\n"}